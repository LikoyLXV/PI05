#include <iostream>
using namespace std;

// Узел списка
struct Node {
    int data;      // данные
    Node* next;    // указатель на следующий элемент
    Node(int val) : data(val), next(nullptr) {}
};

// Односвязный список
class LinkedList {
    Node* head; // голова списка
public:
    LinkedList() : head(nullptr) {}

    // Добавление в начало
    void push_front(int val) {
        Node* newNode = new Node(val);
        newNode->next = head;
        head = newNode;
    }

    // Добавление в конец
    void push_back(int val) {
        Node* newNode = new Node(val);
        if (!head) { head = newNode; return; }
        Node* cur = head;
        while (cur->next) cur = cur->next;
        cur->next = newNode;
    }

    // Удаление первого элемента
    void pop_front() {
        if (!head) return;
        Node* temp = head;
        head = head->next;
        delete temp;
    }

    // Печать списка
    void print() {
        for (Node* cur = head; cur; cur = cur->next)
            cout << cur->data << " ";
        cout << endl;
    }

    // Освобождение памяти
    ~LinkedList() {
        while (head) pop_front();
    }
};

int main() {
    LinkedList list;
    list.push_back(1);     // [1]
    list.push_front(2);    // [2, 1]
    list.push_back(3);     // [2, 1, 3]
    list.print();          // Вывод: 2 1 3
    list.pop_front();      // [1, 3]
    list.print();          // Вывод: 1 3
}
